# Generated by Django 5.2.4 on 2025-07-25 10:18

import django.core.validators
import django.db.models.deletion
import furniture.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brands/')),
                ('website', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HomeSlider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to=furniture.models.slider_image_path)),
                ('mobile_image', models.ImageField(blank=True, null=True, upload_to=furniture.models.slider_image_path)),
                ('link_url', models.URLField(blank=True)),
                ('link_text', models.CharField(blank=True, default='Shop Now', max_length=100)),
                ('background_color', models.CharField(blank=True, help_text='Hex color code', max_length=7)),
                ('text_color', models.CharField(default='#FFFFFF', help_text='Hex color code', max_length=7)),
                ('text_position', models.CharField(choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], default='left', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='furniture.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('sku', models.CharField(blank=True, max_length=50, unique=True)),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField()),
                ('specifications', models.TextField(blank=True, help_text='Technical specifications and details')),
                ('care_instructions', models.TextField(blank=True, help_text='Care and maintenance instructions')),
                ('price', models.DecimalField(decimal_places=2, help_text='Regular price', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Sale price (optional)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, help_text='Cost price for internal use', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('materials', models.CharField(choices=[('wood', 'Wood'), ('metal', 'Metal'), ('fabric', 'Fabric'), ('leather', 'Leather'), ('glass', 'Glass'), ('plastic', 'Plastic'), ('composite', 'Composite'), ('rattan', 'Rattan'), ('bamboo', 'Bamboo'), ('marble', 'Marble'), ('stone', 'Stone'), ('ceramic', 'Ceramic'), ('wicker', 'Wicker'), ('velvet', 'Velvet'), ('linen', 'Linen'), ('cotton', 'Cotton'), ('polyester', 'Polyester'), ('microfiber', 'Microfiber')], default='wood', max_length=50)),
                ('colors', models.CharField(choices=[('white', 'White'), ('black', 'Black'), ('brown', 'Brown'), ('gray', 'Gray'), ('beige', 'Beige'), ('blue', 'Blue'), ('green', 'Green'), ('red', 'Red'), ('natural', 'Natural Wood'), ('oak', 'Oak'), ('walnut', 'Walnut'), ('pine', 'Pine'), ('mahogany', 'Mahogany'), ('cherry', 'Cherry'), ('gold', 'Gold'), ('silver', 'Silver'), ('bronze', 'Bronze'), ('cream', 'Cream'), ('navy', 'Navy'), ('burgundy', 'Burgundy'), ('other', 'Other')], default='natural', max_length=50)),
                ('condition', models.CharField(choices=[('new', 'New'), ('refurbished', 'Refurbished'), ('vintage', 'Vintage'), ('antique', 'Antique')], default='new', max_length=20)),
                ('dimensions_length', models.DecimalField(blank=True, decimal_places=2, help_text='Length in cm', max_digits=8, null=True)),
                ('dimensions_width', models.DecimalField(blank=True, decimal_places=2, help_text='Width in cm', max_digits=8, null=True)),
                ('dimensions_height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in cm', max_digits=8, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=8, null=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('min_stock_level', models.PositiveIntegerField(default=5, help_text='Minimum stock level for alerts')),
                ('track_inventory', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive'), ('discontinued', 'Discontinued')], default='active', max_length=20)),
                ('featured', models.BooleanField(default=False)),
                ('is_bestseller', models.BooleanField(default=False)),
                ('is_new_arrival', models.BooleanField(default=False)),
                ('allow_backorder', models.BooleanField(default=False)),
                ('meta_title', models.CharField(blank=True, max_length=160)),
                ('meta_description', models.CharField(blank=True, max_length=320)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('requires_shipping', models.BooleanField(default=True)),
                ('shipping_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Shipping weight in kg (may differ from actual weight)', max_digits=8, null=True)),
                ('free_shipping', models.BooleanField(default=False)),
                ('requires_assembly', models.BooleanField(default=False)),
                ('assembly_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('assembly_difficulty', models.CharField(blank=True, choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('professional', 'Professional Required')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('purchase_count', models.PositiveIntegerField(default=0)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='furniture.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='furniture.category')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategory_products', to='furniture.category')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='collections/')),
                ('is_active', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('products', models.ManyToManyField(related_name='collections', to='furniture.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=furniture.models.product_image_path)),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='furniture.product')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(max_length=200)),
                ('comment', models.TextField()),
                ('is_verified_purchase', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('helpful_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='furniture.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecentlyViewed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(db_index=True, max_length=40)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='furniture.product')),
            ],
            options={
                'ordering': ['-viewed_at'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(db_index=True, max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='furniture.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('subject', models.CharField(choices=[('general', 'General Inquiry'), ('product', 'Product Question'), ('custom', 'Custom Order'), ('shipping', 'Shipping & Delivery'), ('returns', 'Returns & Exchanges'), ('support', 'Technical Support'), ('feedback', 'Feedback'), ('other', 'Other')], default='general', max_length=20)),
                ('custom_subject', models.CharField(blank=True, help_text="Custom subject if 'Other' is selected", max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_replied', models.BooleanField(default=False)),
                ('reply_message', models.TextField(blank=True)),
                ('replied_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('replied_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['is_read', 'created_at'], name='furniture_c_is_read_d6110f_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['status', 'featured'], name='furniture_p_status_579098_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'status'], name='furniture_p_categor_d7035a_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='furniture_p_created_213e0e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='furniture_p_price_ddce59_idx'),
        ),
        migrations.AddIndex(
            model_name='productimage',
            index=models.Index(fields=['product', 'is_primary'], name='furniture_p_product_6deab4_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['product', 'is_approved'], name='furniture_p_product_a4e2c9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='recentlyviewed',
            unique_together={('session_key', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='wishlist',
            unique_together={('session_key', 'product')},
        ),
    ]
